{"version":3,"sources":["components/StatisticsList/Statistics.module.css","components/Profile/Profile.module.css","components/Profile/Profile.jsx","components/StatisticsList/Statistics.jsx","components/StatisticsList/StatisticList.jsx","components/FriendsList/FriendListItem.jsx","components/FriendsList/FriendList.jsx","components/TransactionHistory/Transaction.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","props","className","styles","profile","description","src","avatar","alt","name","location","stats","stat","followers","views","likes","getRandomColor","color","i","Math","floor","random","Statistics","title","label","percentage","item","style","backgroundColor","statisticList","statistics","statList","map","prop","id","Online","styled","li","Offline","OnlineSpan","span","OfflineSpan","FriendListItem","Current","isOnline","CurrentSpan","margin","width","FriendList","items","friend","Transaction","display","paddingLeft","type","textAlign","amount","currency","TransactionHistory","marginLeft","marginRight","index","App","user","StatisticList","statisticalData","friends","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd2393a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__3owsI\",\"item\":\"Statistics_item__27Nah\",\"statistics\":\"Statistics_statistics__3KShm\",\"label\":\"Statistics_label__bAVQe\",\"percentage\":\"Statistics_percentage__2_TK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Profile_stats__R-j6K\",\"stat\":\"Profile_stat__Zbmhl\",\"profile\":\"Profile_profile__3Tr42\",\"avatar\":\"Profile_avatar__2Ac0f\",\"description\":\"Profile_description__3Xdre\"};","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nfunction Profile(props) {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img\n          src={props.avatar}\n          alt=\"Аватар пользователя\"\n          className={styles.avatar}\n        />\n        <p className=\"name\">{props.name}</p>\n        <p className=\"tag\">@{props.name}</p>\n        <p className=\"location\">{props.location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.stat}>\n          <span className=\"label\">Followers </span>\n          <span className=\"quantity\">{props.followers}</span>\n        </li>\n        <li className={styles.stat}>\n          <span className=\"label\">Views </span>\n          <span className=\"quantity\">{props.views}</span>\n        </li>\n        <li className={styles.stat}>\n          <span className=\"label\">Likes </span>\n          <span className=\"quantity\">{props.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n  location: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  views: PropTypes.number.isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction getRandomColor() {\n  let letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction Statistics({ title = 'Upload stats', label, percentage }) {\n  return (\n    <li className={styles.item} style={{ backgroundColor: getRandomColor() }}>\n      <span className={styles.label}>{label} </span>\n      <span className={styles.percentage}>{percentage}</span>\n    </li>\n  );\n}\n\nStatistics.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.string.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Statistics;\n","import styles from './Statistics.module.css';\n\nimport Statistics from './Statistics';\nimport PropTypes from 'prop-types';\n\nfunction statisticList({ title = 'Upload stats', stats }) {\n  return (\n    <section className={styles.statistics}>\n      <h2 className={styles.title}>{title}</h2>\n      <ul className={styles.statList}>\n        {stats.map(prop => (\n          <Statistics\n            key={prop.id}\n            stats={prop}\n            label={prop.label}\n            percentage={prop.percentage + '%'}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nstatisticList.propTypes = {\n  stats: PropTypes.array.isRequired,\n  title: PropTypes.string,\n};\n\nexport default statisticList;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Online = styled.li`\n  outline: solid 2px blue;\n  width: 200px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin: 10px;\n`;\n\nconst Offline = styled.li`\n  outline: solid 2px red;\n  width: 200px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin: 10px;\n`;\nconst OnlineSpan = styled.span`\n  background-color: aqua;\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n`;\n\nconst OfflineSpan = styled.span`\n  background-color: coral;\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n`;\n\nfunction FriendListItem(props) {\n  let Current = props.isOnline ? Online : Offline;\n  let CurrentSpan = props.isOnline ? OnlineSpan : OfflineSpan;\n  return (\n    <Current className=\"item\">\n      <CurrentSpan className=\"status\"></CurrentSpan>\n      <img\n        style={{ margin: 5 }}\n        className=\"avatar\"\n        src={props.avatar}\n        alt={props.name}\n        width=\"48\"\n      />\n      <p style={{ margin: 0 }} className=\"name\">\n        {props.name}\n      </p>\n    </Current>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\n\nimport FriendListItem from './FriendListItem';\n\nfunction FriendList({ items }) {\n  return (\n    <ul className=\"friend-list\">\n      {items.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          isOnline={friend.isOnline}\n          name={friend.name}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default FriendList;\n\nFriendList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nfunction Transaction(props) {\n  return (\n    <tr>\n      <td\n        style={{\n          width: '150px',\n          display: 'block',\n          backgroundColor: props.color,\n        }}\n      >\n        <span style={{ paddingLeft: '20px' }}>{props.type}</span>\n      </td>\n      <td\n        style={{\n          width: '100px',\n          textAlign: 'center',\n          backgroundColor: props.color,\n        }}\n      >\n        {props.amount}\n      </td>\n      <td\n        style={{\n          width: '100px',\n          textAlign: 'center',\n          backgroundColor: props.color,\n        }}\n      >\n        {props.currency}\n      </td>\n    </tr>\n  );\n}\n\nTransaction.propTypes = {\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Transaction;\n","import PropTypes from 'prop-types';\nimport Transaction from './Transaction';\n\nfunction TransactionHistory({ props }) {\n  return (\n    <table\n      style={{ marginLeft: 'auto', marginRight: 'auto' }}\n      className=\"transaction-history\"\n    >\n      <thead>\n        <tr>\n          <th style={{ backgroundColor: 'teal' }}> Type </th>\n          <th style={{ backgroundColor: 'teal' }}>Amount</th>\n          <th style={{ backgroundColor: 'teal' }}>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.map((prop, index) => {\n          let color = index % 2 === 0 ? 'green' : 'yellow';\n\n          return (\n            <Transaction\n              color={color}\n              key={prop.id}\n              type={prop.type}\n              currency={prop.currency}\n              amount={prop.amount}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  props: PropTypes.array.isRequired,\n};\n\nexport default TransactionHistory;\n","import './App.css';\nimport Profile from './components/Profile/Profile';\nimport StatisticList from './components/StatisticsList/StatisticList';\nimport FriendList from './components/FriendsList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport friends from './friends.json';\nimport transactions from './transactions.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <StatisticList title=\"My Uploads\" stats={statisticalData} />\n      <FriendList items={friends} />\n      <TransactionHistory props={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}